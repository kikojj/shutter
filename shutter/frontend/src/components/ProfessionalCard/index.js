import React from 'react';
import axios from 'axios';
import { useHistory } from "react-router-dom";

//–ò–º–ø–æ—Ä–∏—Ç—Ä—É–µ–º –≥–æ—Ç–æ–≤—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã material design
import Card from '@material-ui/core/Card';
import CardContent from '@material-ui/core/CardContent';
import Typography from '@material-ui/core/Typography';
import Chip from '@material-ui/core/Chip';
import Button from '@material-ui/core/Button';

//–°—Ç–∏–ª–∏
import useStyles from './style';

export default function RecipeReviewCard(props) {
  //–°—Ç–∏–ª–∏
  const classes = useStyles();

  let history = useHistory();

  function startMsg() {
    if (localStorage.token.length <= 2) {
      console.log("Login first");
      return;
    }
    let check = props.dialogs.find(dialog => dialog.penFriend.userInfo[1] === props.professional.userInfo.id);
    if (check) {
      props.setCurrentDialog(props.dialogs.indexOf(check));
      history.push("/im");
    } else {
      const data = {
        userFrom: JSON.parse(localStorage.user).id,
        userTo: props.professional.userInfo.id,
        text: "üëã",
      };
      props.setCurrentDialog(0);
      axios.post(window.location.origin + "/api/messages/", data).then(response => {
        history.push("/im");
      });
    }
  }

  const genres = props.professional.genre.map((genre, key) => {
    return (
      <Chip
        key={key}
        className={classes.chip}
        label={props.genres.find(v => v.id === genre).title}
        color="primary"
      />
    )
  });

  let profession;
  switch (props.professional.profession) {
    case 'model':
      profession = "–ú–æ–¥–µ–ª—å";
      break;
    case 'photographer':
      profession = "–§–æ—Ç–æ–≥—Ä–∞—Ñ";
      break;
    case 'visagiste':
      profession = "–í–∏–∑–∞–∂–∏—Å—Ç";
      break;
    case 'brand':
      profession = "–ë—Ä—ç–Ω–¥";
      break;
  }

  let kindOfWork;
  switch (props.professional.kindOfWork) {
    case 'price':
      kindOfWork = "–ó–∞ –æ–ø–ª–∞—Ç—É";
      break;
    case 'free':
      kindOfWork = "–ë–µ—Å–ø–ª–∞—Ç–Ω–æ";
      break;
    case 'creativeProject':
      kindOfWork = "–¢–≤–æ—Ä—á–µ—Å–∫–∏–π –ø—Ä–æ–µ–∫—Ç";
      break;
  }

  let direction;
  switch (props.professional.direction) {
    case 'photoshoot':
      direction = "–§–æ—Ç–æ—Å–µ—Å—Å–∏–∏";
      break;
    case 'impressions':
      direction = "–ü–æ–∫–∞–∑—ã";
      break;
    case 'agencies':
      direction = "–ê–≥–µ–Ω—Ç—Å—Ç–≤–∞";
      break;
    case 'advertising':
      direction = "–†–µ–∫–ª–∞–º–∞";
      break;
    case 'filming':
      direction = "–ö–∏–Ω–æ—Å—ä—ë–º–∫–∏";
      break;
  }

  return (
    <Card className={classes.root}>
      <div className={classes.cardContent}>
        <div className={classes.media} style={{ backgroundImage: `url(${props.professional.photo})` }}></div>
        <CardContent className={classes.cardContent_text}>
          <Typography component="h5" variant="h5">
            {props.professional.userInfo.first_name} {props.professional.userInfo.last_name}{props.professional.age ? ", " + props.professional.age : ""}
          </Typography>
          <Typography variant="subtitle1" color="textSecondary">
            {props.professional.city}, {profession}
          </Typography>
          {
            props.professional.height ?
              <Typography variant="subtitle1" color="textSecondary">
                –†–æ—Å—Ç: {props.professional.height} —Å–º
                </Typography>
              : ""
          }
          {
            props.professional.weight ?
              <Typography variant="subtitle1" color="textSecondary">
                –í–µ—Å: {props.professional.weight} –∫–≥
                </Typography>
              : ""
          }
          {
            props.professional.experience ?
              <Typography variant="subtitle1" color="textSecondary">
                –û–ø—ã—Ç: {props.professional.experience} –≥.
                </Typography>
              : ""
          }
          {
            props.professional.kindOfWork !== "" ?
              <Typography variant="subtitle1" color="textSecondary">
                –í–∏–¥ —Ä–∞–±–æ—Ç—ã: {kindOfWork}
              </Typography>
              : ""
          }
          {
            props.professional.kindOfWork === "price" ?
              <Typography variant="subtitle1" color="textSecondary">
                –û–ø–ª–∞—Ç–∞: {props.professional.price}
              </Typography>
              : ""
          }
          {
            props.professional.genre.length > 0 ?
              <>
                <Typography variant="subtitle1" color="textSecondary">
                  –ñ–∞–Ω—Ä—ã:
                </Typography>
                {genres}
              </>
              : ""
          }
          {
            props.professional.direction !== "" && props.professional.direction !== null ?
              <Typography variant="subtitle1" color="textSecondary">
                –ù–∞–≤–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: {direction}
              </Typography>
              : ""
          }
        </CardContent>
      </div>
      <div className={classes.card_actions}>
        <Button color="primary" onClick={() => history.push("profile/" + props.professional.id)}>
          –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ—Ñ–∏–ª—å
        </Button>
        <Button color="primary" onClick={() => startMsg()}>
          –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
        </Button>
      </div>
    </Card >
  );
}
